from termcolor import colored

import scanner
from bs4 import BeautifulSoup
import tkinter as tk
from tkinter import ttk
from tkinter import filedialog
import sql


class Main:
    def __init__(self):
        self.root = tk.Tk()
        self.style = ttk.Style()
        self.toptab = ttk.Notebook(self.root)
        self.tab1 = ttk.Frame(self.toptab)
        self.tab2 = ttk.Frame(self.toptab)
        self.tree = ttk.Treeview(self.tab1)
        self.listbox = tk.Listbox(self.tab2, bg="white", height=10, width=15)
        self.listbox1 = tk.Listbox(self.tab2, bg='white', height=10, width=15, selectmode=tk.MULTIPLE)
        self.listbox2 = tk.Listbox(self.tab2, bg='white', height=10, width=15)
        self.e = ttk.Entry(self.tab1)
        self.e2 = ttk.Entry(self.tab2)
        self.ignore_link = ["http://localhost:8080/dvwa/DVWA-master/logout.php",
                            "http://localhost:8080/dvwa/DVWA-master/vulnerabilities/csrf/",
                            "http://localhost:8080/dvwa/DVWA-master/vulnerabilities/captcha/"]
        self.button = ttk.Button(self.tab1, text="lunch the scan", command=self.scann)
        self.file_button = ttk.Button(self.tab2, text="Select a file", command=self.choose_file)
        self.button1 = ttk.Button(self.tab2, text="Launch", command=self.launcher)
        self.button2 = ttk.Button(self.tab2, text="get table names")
        self.button3 = ttk.Button(self.tab2, text="get user credential")

    def make(self):
        self.style.configure("BW.TLabel", foreground="black", background="white")
        self.root.title("XSS AND SQL Detector")
        self.root.geometry('1100x900')
        self.toptab.add(self.tab1, text='XSS')
        self.toptab.add(self.tab2, text='SQL')
        self.tree["columns"] = ('Payload', 'Result')
        self.tree.column("#0", width=200, minwidth=66)
        self.tree.column("Payload", width=100, minwidth=33)
        self.tree.column("Result", width=44, minwidth=33)
        self.tree.heading('#0', text="Link")
        self.tree.heading('Payload', text="Payload")
        self.tree.heading('Result', text="Result")
        self.e.insert(0, "Enter a URL :")
        # tree.insert("", 1, text="firt row", value=("B1", "e"))
        self.toptab.pack(expand=1, fill="both")
        self.tree.pack(side='top', fill='x')
        self.listbox.grid(row=0, column=0, padx=17)
        self.listbox1.grid(row="0", column=1)
        self.listbox2.grid(row=0, column=2)
        self.e.pack()
        self.e2.grid(row=2, column=0)
        self.file_button.grid(row=2, column=1)
        self.button.pack()
        self.button1.grid(row=3, column=1)
        self.button2.grid(row=1, column=0, pady=16)
        self.button3.grid(row=1, column=1)

    def scann(self):
        url = self.e.get()
        if url == "http://localhost:8080/dvwa/DVWA-master/":
            vuln_scanner = scanner.Scanner(self.e.get(), self.ignore_link)
            with vuln_scanner.session as s:
                s.cookies['security'] = 'low'
                src = s.get("http://localhost:8080/dvwa/DVWA-master/login.php")
                soup = BeautifulSoup(src.text, "html.parser")
                token = soup.find('input', {"type": "hidden"})['value']
                creds = {"username": "admin", "password": "password", "Login": "Login", "user_token": token}
                s.post("http://localhost:8080/dvwa/DVWA-master/login.php", data=creds)
                vuln_scanner.crawl()
                vuln_scanner.run_scanner(self)
        else:
            vuln_scanner = scanner.Scanner(self.e.get(), self.ignore_link)
            vuln_scanner.crawl()
            vuln_scanner.run_scanner(self)

    def choose_file(self):
        self.root.filename = filedialog.askopenfilename(initialdir="/Users/HOME", title="Select a file",
                                                        filetypes=(('txt file', '*.txt'), ('all file', '.*')))

        lb = tk.Label(self.tab2, text=self.root.filename)
        lb.grid(row=2, column=2)

    def launcher(self):
        sql_var = sql.Sql()
        print("[-] Opening injections file: " + self.root.filename)
        f = open(self.root.filename, "r")
        dic_tio = f.read().splitlines()
        injected = []
        for x in dic_tio:
            sql_injection = x
            injected.append(self.e2.get().replace("FUZZ", sql_injection))
        res = sql_var.injector(injected)

        print(colored('[+] Detection results:', 'green'))
        print("------------------")
        for x in res:
            print(x.split(";")[0])

        print(colored('[+] Detect number of columns: ', 'green'))
        print("-----------------")
        res = sql_var.detect_columns(self.e2.get())
        print("Number of columns: " + res)

        print("[+] Detect columns That can hold a String: ")
        print("-------------------------")
        st = sql_var.stringcolumn(res, self.e2.get())

        print(colored('[+] Get tables names:', 'green'))
        print("---------------------")
        self.button2.config(command=lambda sql_var=sql_var: sql_var.detect_table_names(self, res, self.e2.get(), st))
        self.listbox.bind("<Double-Button-1>", lambda event: sql_var.detect_columns_names(event, vuln_object=self, num=res, url=self.e2.get(), string=st))

        print(colored('[+] Attempting MYSQL user extraction', 'green'))
        print("-------------------------------------")

        self.button3.config(command=lambda: sql_var.steal_users(vuln_object=self, num=res, url=self.e2.get(), string=st))

        print("Scan finish")

if __name__ == '__main__':
    gui = Main()
    gui.make()
    gui.root.mainloop()
